<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call SimpleInstanceMethodContractApplication.main(_o)&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="return _o.doubleValue(21);" pathCondition="true" pathConditionChanged="false">
         <operationContract name="result_0 = _o.doubleValue(Z(1(2(#)))) catch(exc_0)
pre: (  (geq(Z(1(2(#))), Z(0(#)))
 &amp; \forall int x; true)&lt;&lt;SC&gt;&gt;
 &amp; java.lang.Object::&lt;inv&gt;(heap, _o)&lt;&lt;impl&gt;&gt;)&lt;&lt;SC&gt;&gt;
post: (result_0 = javaMulInt(Z(1(2(#))), Z(2(#)))
&amp; java.lang.Object::&lt;inv&gt;(heap, _o)&lt;&lt;impl&gt;&gt;)&lt;&lt;SC&gt;&gt;
&amp; (exc_0 = null)&lt;&lt;impl&gt;&gt;
mod: empty, creates no new objects
termination: diamond" pathCondition="true" pathConditionChanged="false" resultTerm="result_0" exceptionTerm="exc_0" selfTerm="_o" contractParameters="Z(1(2(#)))" preconditionComplied="true" hasNotNullCheck="true" notNullCheckComplied="true">
            <methodReturn name="&lt;return of main&gt;" signature="&lt;return of SimpleInstanceMethodContractApplication.main(_o)&gt;" pathCondition="true" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="true">
               <termination name="&lt;end&gt;" pathCondition="true" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
               </termination>
            </methodReturn>
         </operationContract>
      </statement>
      <methodReturnEntry path="/0/0/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0"/>
</start>
